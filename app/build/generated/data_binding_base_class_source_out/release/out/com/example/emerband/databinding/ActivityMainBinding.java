// Generated by view binder compiler. Do not edit!
package com.example.emerband.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.emerband.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnCyberCell;

  @NonNull
  public final Button btnEmergencyCall;

  @NonNull
  public final Button btnEmergencyContacts;

  @NonNull
  public final Button btnLocation;

  @NonNull
  public final Button btnSettings;

  @NonNull
  public final Button btnTestAlert;

  @NonNull
  public final Button btnTestEmergency;

  @NonNull
  public final Button btnTestFakeCall;

  @NonNull
  public final Button btnTestOffline;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final MaterialCardView debugCard;

  @NonNull
  public final LinearLayout debugContent;

  @NonNull
  public final LinearLayout debugHeader;

  @NonNull
  public final FloatingActionButton fabEmergency;

  @NonNull
  public final ImageView ivBluetoothStatus;

  @NonNull
  public final ImageView ivDebugExpand;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvBluetoothStatus;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView, @NonNull Button btnCyberCell,
      @NonNull Button btnEmergencyCall, @NonNull Button btnEmergencyContacts,
      @NonNull Button btnLocation, @NonNull Button btnSettings, @NonNull Button btnTestAlert,
      @NonNull Button btnTestEmergency, @NonNull Button btnTestFakeCall,
      @NonNull Button btnTestOffline, @NonNull CoordinatorLayout coordinatorLayout,
      @NonNull MaterialCardView debugCard, @NonNull LinearLayout debugContent,
      @NonNull LinearLayout debugHeader, @NonNull FloatingActionButton fabEmergency,
      @NonNull ImageView ivBluetoothStatus, @NonNull ImageView ivDebugExpand,
      @NonNull Toolbar toolbar, @NonNull TextView tvBluetoothStatus) {
    this.rootView = rootView;
    this.btnCyberCell = btnCyberCell;
    this.btnEmergencyCall = btnEmergencyCall;
    this.btnEmergencyContacts = btnEmergencyContacts;
    this.btnLocation = btnLocation;
    this.btnSettings = btnSettings;
    this.btnTestAlert = btnTestAlert;
    this.btnTestEmergency = btnTestEmergency;
    this.btnTestFakeCall = btnTestFakeCall;
    this.btnTestOffline = btnTestOffline;
    this.coordinatorLayout = coordinatorLayout;
    this.debugCard = debugCard;
    this.debugContent = debugContent;
    this.debugHeader = debugHeader;
    this.fabEmergency = fabEmergency;
    this.ivBluetoothStatus = ivBluetoothStatus;
    this.ivDebugExpand = ivDebugExpand;
    this.toolbar = toolbar;
    this.tvBluetoothStatus = tvBluetoothStatus;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCyberCell;
      Button btnCyberCell = ViewBindings.findChildViewById(rootView, id);
      if (btnCyberCell == null) {
        break missingId;
      }

      id = R.id.btnEmergencyCall;
      Button btnEmergencyCall = ViewBindings.findChildViewById(rootView, id);
      if (btnEmergencyCall == null) {
        break missingId;
      }

      id = R.id.btnEmergencyContacts;
      Button btnEmergencyContacts = ViewBindings.findChildViewById(rootView, id);
      if (btnEmergencyContacts == null) {
        break missingId;
      }

      id = R.id.btnLocation;
      Button btnLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnLocation == null) {
        break missingId;
      }

      id = R.id.btnSettings;
      Button btnSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnSettings == null) {
        break missingId;
      }

      id = R.id.btnTestAlert;
      Button btnTestAlert = ViewBindings.findChildViewById(rootView, id);
      if (btnTestAlert == null) {
        break missingId;
      }

      id = R.id.btnTestEmergency;
      Button btnTestEmergency = ViewBindings.findChildViewById(rootView, id);
      if (btnTestEmergency == null) {
        break missingId;
      }

      id = R.id.btnTestFakeCall;
      Button btnTestFakeCall = ViewBindings.findChildViewById(rootView, id);
      if (btnTestFakeCall == null) {
        break missingId;
      }

      id = R.id.btnTestOffline;
      Button btnTestOffline = ViewBindings.findChildViewById(rootView, id);
      if (btnTestOffline == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.debugCard;
      MaterialCardView debugCard = ViewBindings.findChildViewById(rootView, id);
      if (debugCard == null) {
        break missingId;
      }

      id = R.id.debugContent;
      LinearLayout debugContent = ViewBindings.findChildViewById(rootView, id);
      if (debugContent == null) {
        break missingId;
      }

      id = R.id.debugHeader;
      LinearLayout debugHeader = ViewBindings.findChildViewById(rootView, id);
      if (debugHeader == null) {
        break missingId;
      }

      id = R.id.fabEmergency;
      FloatingActionButton fabEmergency = ViewBindings.findChildViewById(rootView, id);
      if (fabEmergency == null) {
        break missingId;
      }

      id = R.id.ivBluetoothStatus;
      ImageView ivBluetoothStatus = ViewBindings.findChildViewById(rootView, id);
      if (ivBluetoothStatus == null) {
        break missingId;
      }

      id = R.id.ivDebugExpand;
      ImageView ivDebugExpand = ViewBindings.findChildViewById(rootView, id);
      if (ivDebugExpand == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvBluetoothStatus;
      TextView tvBluetoothStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvBluetoothStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, btnCyberCell, btnEmergencyCall,
          btnEmergencyContacts, btnLocation, btnSettings, btnTestAlert, btnTestEmergency,
          btnTestFakeCall, btnTestOffline, coordinatorLayout, debugCard, debugContent, debugHeader,
          fabEmergency, ivBluetoothStatus, ivDebugExpand, toolbar, tvBluetoothStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
